[tool.poetry]
name = "fastapi-monolith"
version = "0.1.0"
description = "fastapi monolith application example"
authors = ["safecorners <safeconers.mobile@gmail.com>"]
readme = "README.md"
packages = [{include = "application", from="src"}]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.95.0"
uvicorn = {extras = ["standard"], version = "^0.21.1"}
pydantic = "^1.10.6"
sqlalchemy = "^2.0.7"
dependency-injector = "^4.41.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
httpx = "^0.23.3"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
flake8-pyproject = "^1.2.2"
isort = "^5.12.0"
black = "^23.1.0"
mypy = "^1.1.1"
bandit = "^1.7.5"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
pythonpath = ["src"]

[tool.flake8]
max-line-length = 88
exclude = [".git", "__pycache__"]
count = true

[tool.black]
line-length = 88

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = true
no_implicit_optional = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
# init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
